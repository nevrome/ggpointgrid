// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// futhark_entry_arrange_from_coordinates_cpp
Rcpp::List futhark_entry_arrange_from_coordinates_cpp(Rcpp::NumericVector grid_xs, Rcpp::NumericVector grid_ys, Rcpp::NumericVector pts_x, Rcpp::NumericVector pts_y);
RcppExport SEXP _ggpointgrid_futhark_entry_arrange_from_coordinates_cpp(SEXP grid_xsSEXP, SEXP grid_ysSEXP, SEXP pts_xSEXP, SEXP pts_ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type grid_xs(grid_xsSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type grid_ys(grid_ysSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type pts_x(pts_xSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type pts_y(pts_ySEXP);
    rcpp_result_gen = Rcpp::wrap(futhark_entry_arrange_from_coordinates_cpp(grid_xs, grid_ys, pts_x, pts_y));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ggpointgrid_futhark_entry_arrange_from_coordinates_cpp", (DL_FUNC) &_ggpointgrid_futhark_entry_arrange_from_coordinates_cpp, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_ggpointgrid(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
